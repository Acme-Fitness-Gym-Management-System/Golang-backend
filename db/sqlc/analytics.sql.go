// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: analytics.sql

package db

import (
	"context"
)

const getClassEnrolmentByWeek = `-- name: GetClassEnrolmentByWeek :many
SELECT c.day, SUM(enrollment) as avg_enrollmen FROM class c
    JOIN (
    SELECT
    classcatalogue.courseid,
    COUNT(*) as enrollment
    FROM
    classcatalogue
    JOIN class ON classcatalogue.courseid = class.id
    GROUP BY
    classcatalogue.courseid
    ) AS enrollment ON enrollment.courseid = class.id
GROUP BY
    c.day
ORDER BY
    day ASC
`

type GetClassEnrolmentByWeekRow struct {
	Day          string `json:"day"`
	AvgEnrollmen int64  `json:"avg_enrollmen"`
}

func (q *Queries) GetClassEnrolmentByWeek(ctx context.Context) ([]GetClassEnrolmentByWeekRow, error) {
	rows, err := q.db.QueryContext(ctx, getClassEnrolmentByWeek)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GetClassEnrolmentByWeekRow{}
	for rows.Next() {
		var i GetClassEnrolmentByWeekRow
		if err := rows.Scan(&i.Day, &i.AvgEnrollmen); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
