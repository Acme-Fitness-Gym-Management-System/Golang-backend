// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: class.sql

package db

import (
	"context"

	"time"
)

const createClass = `-- name: CreateClass :one
INSERT INTO class (
    instructorname,
    starttime,
    endtime,
    name,
    startdate,
    enddate,
    locationid,
    cost,
    day
)
VALUES
    ($1, $2, $3,$4, $5, $6,$7,$8,$9) RETURNING id, instructorname, regstatus, startdate, enddate, starttime, endtime, day, name, classtype, locationid, cost
`

type CreateClassParams struct {
	Instructorname string         `json:"instructorname"`
	Starttime      time.Time      `json:"starttime"`
	Endtime        time.Time      `json:"endtime"`
	Name           string `json:"name"`
	Startdate      time.Time      `json:"startdate"`
	Enddate        time.Time      `json:"enddate"`
	Locationid     int64          `json:"locationid"`
	Cost           int32          `json:"cost"`
	Day            string         `json:"day"`
}

func (q *Queries) CreateClass(ctx context.Context, arg CreateClassParams) (Class, error) {
	row := q.db.QueryRowContext(ctx, createClass,
		arg.Instructorname,
		arg.Starttime,
		arg.Endtime,
		arg.Name,
		arg.Startdate,
		arg.Enddate,
		arg.Locationid,
		arg.Cost,
		arg.Day,
	)
	var i Class
	err := row.Scan(
		&i.ID,
		&i.Instructorname,
		&i.Regstatus,
		&i.Startdate,
		&i.Enddate,
		&i.Starttime,
		&i.Endtime,
		&i.Day,
		&i.Name,
		&i.Classtype,
		&i.Locationid,
		&i.Cost,
	)
	return i, err
}

const getClass = `-- name: GetClass :one
SELECT id, instructorname, regstatus, startdate, enddate, starttime, endtime, day, name, classtype, locationid, cost FROM class
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetClass(ctx context.Context, id int64) (Class, error) {
	row := q.db.QueryRowContext(ctx, getClass, id)
	var i Class
	err := row.Scan(
		&i.ID,
		&i.Instructorname,
		&i.Regstatus,
		&i.Startdate,
		&i.Enddate,
		&i.Starttime,
		&i.Endtime,
		&i.Day,
		&i.Name,
		&i.Classtype,
		&i.Locationid,
		&i.Cost,
	)
	return i, err
}
